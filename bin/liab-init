#!/usr/bin/env node

var program = require('commander');
var path = require('path');
var request = require('request');
var netrc = require('node-netrc');
var fs = require('fs');
var config = require('../config')();
var pkg = require(path.join(process.cwd(), 'package.json'));
var util = require('../lib/utilities');


/**
 * Loads config vars as set in the project's .env file.
 */
require('dotenv').config({ path: path.join(process.cwd(), '.env') });

console.log('Talking to the mothership...');

// Re-assign process.exit because of commander
// TODO: Switch to a different command framework
process.exit = util.exit;


// Parse the command for args and flags
program
	.option('-e, --environment <type>', 'If set to DEV, request goes to localhost.')
	.parse(process.argv);

// Set environment
var env = program.environment ? program.environment.toLowerCase() : '';
var PORT = 3000;

if (env === 'dev' || env === 'development') {
	var HOST = 'localhost:' + PORT;
	var APP_URL = 'http://localhost:' + PORT + '/' + config.API_MAJOR_VERSION;
} else {
	var HOST = config.HOST;
	var APP_URL = 'https://' + HOST + '/' + config.API_MAJOR_VERSION;
}


// Create a new resource on the server
createNode(function(err, status, body) {
	if (err || status === 500) {
		console.log('ERROR: Something went wrong. Please contact us at support@lightninginabot.com');
		util.exit();
	}

	if (status === 400) {
		return console.log('There is already a node with this name in your account. Use the "upload" command to update it.');
	}

	if (status === 200) {
		var nodeId = JSON.parse(body).id.toString();
		if (env === 'dev' || env === 'development') {
			var str = '\r\nDEV_ID='+nodeId;
		} else {
			var str = '\r\nID='+nodeId;
		}
		

		// Save node id to local .env file
		return fs.appendFile(path.join(process.cwd(), '.env'), str, function(err) {
			if (err) console.log(err);
			return console.log('BEE BOP! Your node was successfully added to your account. Make sure to run the "upload" command to upload your node\'s code.');
		});
	}

	if (!util.exit.exited) {
		if(!program.args.length) {
	    program.help();
	  }
	}
});


/**
 * Create a new resource on the server
 * Will fail if resource with given name already exists
 */
function createNode(cb) {
	// Get auth creds from netrc file
	var auth = netrc(HOST);

	request.post(APP_URL + '/nodes', {
	  'auth': { 'bearer': auth.password },
	  'form': { 'name' : pkg.name }
	}, function(err, res, body) {
		return cb(err, res.statusCode, body);
	});
}
