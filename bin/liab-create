#!/usr/bin/env node

/**
 * TODO
 *   - Remove the dotenv require hook from 'index.js' template
 */

var program = require('commander');
var path = require('path');
var config = require('../config')();
var pkg = require('../package.json');
var util = require('../lib/utilities')

// Re-assign process.exit because of commander
// TODO: Switch to a different command framework
process.exit = util.exit;


// Parse the command for args and flags
program.parse(process.argv);


// Get the submitted interaction name
if (program.args.length > 0) {
	var name = program.args[0];
} else {
	console.log('You need to supply a name for your node. Type "' + config.APP_NAME + '" for help.');
	util.exit(1);
}

// Create a new interaction
newInteraction(name);


if (!util.exit.exited) {
	if(!program.args.length) {
    program.help();
  }
}


/**
 * New Interaction
 * Checks for existence and if it doesn't exist creates the interaction
 */
function newInteraction(nameDisplay) {

	// Path
	var nameSlug = util.slugify(nameDisplay);
  var destinationPath = nameSlug || '.';

  // Interaction name placed onto server
  var interactionName = path.basename(path.resolve(destinationPath));

  // Generate interaction in local filesystem
  util.emptyDirectory(destinationPath, function (empty) {
    if (empty || program.force) {
      createInteraction(interactionName, destinationPath);
    } else {
      util.confirm('destination is not empty, continue? [y/N] ', function (ok) {
        if (ok) {
          process.stdin.destroy();
          createInteraction(interactionName, destinationPath);
        } else {
          console.error('aborting');
          util.exit(1);
        }
      });
    }
  });
}


/**
 * Create interaction at the given directory `path`. 
 *
 * @param {String} path
 */
function createInteraction(interactionName, path) {

  var wait = 5;

  console.log();

  function complete() {
    if (--wait) return;
    var prompt = util.launchedFromCmd() ? '>' : '$';

    console.log();
    console.log('   install dependencies:');
    console.log('     %s cd %s && npm install', prompt, path);
    console.log();
    console.log('   run the app:');

    if (util.launchedFromCmd()) {
      console.log('     %s SET DEBUG=%s:* & npm start', prompt, interactionName);
    } else {
      console.log('     %s DEBUG=%s:* npm start', prompt, interactionName);
    }
    console.log();
  }


  // JavaScript
  var index  = util.loadTemplate('index.js');

	util.mkdir(path, function() {

	  // package.json
	  var pkg = {
	    name : interactionName,
	    version : '0.0.0',
	    description : '',
	    main : 'index.js',
	    author : '',
	    license : '',
	    private : true,
	    scripts : { test: 'echo \"Error: no test specified\" && exit 1' },
	    dependencies : {},
	    repository: { url: '' }
	  };

    // config.json
    var config = {
      id          : null,
      expressions : [],
      keys        : [],
    };

    // test.json
    var test = {
      bot  : null,
      keys : []
    };

	  // write files
	  util.write(path + '/package.json', JSON.stringify(pkg, null, 2));
    util.write(path + '/config.json', JSON.stringify(config, null, 2));
    util.write(path + '/test.json', JSON.stringify(test, null, 2));
	  util.write(path + '/index.js', index);

	  complete();
	});
}
