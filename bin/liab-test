#!/usr/bin/env node

var program = require('commander');
var fs = require('fs');
var exec = require('child_process').exec;
var path = require('path');
var util = require('../lib/utilities.js')
var config = require('../config')();


// Re-assign process.exit because of commander
// TODO: Switch to a different command framework
process.exit = util.exit;


program.parse(process.argv);


// Get the parsed args from the CLI input
var testKeysString = program.args[0];


if (!testKeysString) { 

	console.log('Please provide an event value to test.');
	// console.log('You can either:');
	// console.log('1. Pass an argument to the "test" command (wrap phrases in double-quotes), or');
	// console.log('2. Add a key called TEST_VALUE to your .env file.');
	console.log('\r\nType "' + config.APP_NAME + '" for more help.'); 
	util.exit(1);

} else {

	// Require the main interaction script
	var script = require(process.cwd() + '/index.js');


	// Setup the test data to pass into the interaction script
	var testEvent = {
		keys: JSON.parse(testKeysString),
		user_id: 'test_user',
		timestamp: Date.now()
	}


	var testContext = {
		done: function() {
			console.log('Done.');
		},

		succeed: function(res) {
			console.log('The test completed successfully.');
			console.log('Your node returned:\r\n');
			console.log(res);
			console.log('\r\nType "' + config.APP_NAME + ' upload" when you\'re ready to upload your node to ' + config.APP_NAME + '.');
		},

		error: function(err) {
			console.log(err);
		}
	}


	// Run the handler method of the interaction script
	Promise.resolve(script.handler(testEvent, testContext)).then(() => util.exit(1));


	if (!util.exit.exited) {
		if(!program.args.length) {
	    program.help();
	  }
	}
	
}
